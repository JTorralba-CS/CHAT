@using Standard.Functions

@inject DialogService DialogService
@inject Services.Transcript Transcript
@inject Services.Chat Chat

<RadzenCard Style="margin: 0px; padding: 0px;">
    <RadzenTextBox Change=@(args => OnChange(args)) Style="width: 100%;" @ref="textInput" @bind-Value="value" />
</RadzenCard>

@code {
    private RadzenTextBox? textInput;

    private string? value;

    protected override async Task OnInitializedAsync()
    {
        value = string.Empty;

        Transcript.OnChange += () =>
        {
            InvokeAsync(StateHasChanged);
        };
    }

    protected override async void OnAfterRender(bool firstRender)

    {
        if (firstRender)
        {
            await textInput.Element.FocusAsync();
        }
    }

    private async Task OnChange(string value)
    {
        this.value = string.Empty;

        var Argument = Core.SplitSpaceInput(value);

        if (Argument[0] == ".")
        {
            await Chat.SetConnection(Argument[1]);
        }

        await Chat.Send(value);
    }
}
