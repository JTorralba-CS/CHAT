@page "/userhtml"

@attribute [Authorize]

@inject Services.LoginService LoginService

@implements IAsyncDisposable

<PageTitle>UserHTML</PageTitle>

@if (LoginService.Users == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th width="75">ID</th>
                <th width ="150">Name</th>
                <th width="150">Password</th>
            </tr>
        </thead>
        <tbody>
            @using (var tables = new IMDB())
            {
                <Virtualize Items="@tables.Users.AsQueryable().ToList()">
                    <tr>
                    <td>@context.ID</td>
                    <td>@context.Name</td>
                    <td>@context.Password</td>
                </tr>
            </Virtualize>
            }
        </tbody>
    </table>
}

@code {
    protected override async Task OnInitializedAsync()
    {
        LoginService.OnChangeUsers += () =>
        {
            InvokeAsync(StateHasChanged);
        };
    }

    public async ValueTask DisposeAsync()
    {
        LoginService.OnChangeUsers -= StateHasChanged;
    }
}
