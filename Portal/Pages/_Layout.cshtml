@using Microsoft.AspNetCore.Components.Web
@namespace Portal.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@* JTorralba *@
@using Radzen.Blazor

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link href="css/site.css" rel="stylesheet" />
    <link href="Portal.styles.css" rel="stylesheet" />
    <component type="typeof(HeadOutlet)" render-mode="Server" />

    @* JTorralba *@
    <component type="typeof(RadzenTheme)" render-mode="Server" param-Theme="@("material")" />

</head>
<body>
    @RenderBody()

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    @* JTorralba *@
    <div id="components-reconnect-modal" class="my-reconnect-modal components-reconnect-hide">
        <div class="show">
            <p>
                @* server connection initializing *@
            </p>
        </div>
        <div class="failed">
            <p>
                @* server connection failed *@
            </p>
        </div>
        <div class="rejected">
            <p>
                @* server connection rejected *@
            </p>
        </div>
    </div>

    @* JTorralba *@
    <script src="_framework/blazor.server.js" autostart="false"></script>
    <script type="text/javascript">
        Blazor.start({
            reconnectionOptions: {
                maxRetries: Infinity,
                retryIntervalMilliseconds: 100
            },
            reconnectionHandler: {
                onConnectionDown: (options, error) => {
                    Blazor.defaultReconnectionHandler.onConnectionDown(options, error);
                    Blazor.defaultReconnectionHandler._reconnectionDisplay.rejected = function () {
                        window.location.reload();
                    }
                }
            }
        });
    </script>
    <script src="_content/Radzen.Blazor/Radzen.Blazor.js?v=@(typeof(Radzen.Colors).Assembly.GetName().Version)"></script>

</body>
</html>
